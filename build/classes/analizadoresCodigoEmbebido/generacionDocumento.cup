/*--------------- 1ra Area: Codigo de Usuario -----------------------*/
//-------> importaciones, paquetes

package backend.generacionHtml;
import java_cup.runtime.*;
import backend.arbol.*;
import backend.AccionesMatematicas.*;


parser code {:

    Nodo nodo1=null;
    Nodo nodo2=null;

    // Connect this parser to a scanner!
    public parser(AnalizadorDeCodigoEmbebido lex) {
	super(lex);
    }

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s){        
        //System.out.println("ERROR EN ESTRUCTURA");
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{        
                //System.out.println("ERROR EN ESTRUCTURA");
    }

:}


/*--------------- 2da Area: Declaraciones -----------------------*/

//---------------------------------------------TERMINALES-----------------------------------

/****************************************Expresiones*************************/

terminal String NUMERO;

/****************************************Definición de variables*************************/

terminal String     VAR,IDENTIFICADOR;

terminal String     INTEGER,BOOLEAN,STRING,TRUE,FALSE;


/****************************************Operaciones logicas*************************/

terminal String     AND,OR;

/****************************************Condicional(If)*************************/

terminal String     IF,THEN,ELSE;

/***************************************Ciclos***********************************/

terminal String     WHILE,FOR,TO;

/***************************************Escritura***********************************/

terminal String     PRINT,ORACION,URL;

/***************************************Bloques***********************************/

terminal String     BEGIN,END;



/****************************************Definición de simbolos*************************/

terminal String         MAS,MENOS,POR,DIV,MAYOR,MENOR,DOS_PUNTOS,IGUAL,PARENTESIS_ABIERTO,PARENTESIS_CERRADO,
                        COMA,PUNTO_COMA,CORCHETE_ABIERTO,CORCHETE_CERRADO,PORCENTAJE;//Expresiones matematicas





//--------------------------------------------NO TERMINALES-------------------------------------

non terminal Object     operacion;//Inicio de gramatica

non terminal Nodo     expresion,t,f; //Expresiones matematicas

non terminal Object     conjuntoDeInstrucciones,unaInstruccion;
/*--------------- 3ra Area: Reglas Semanticas -----------------------*/

start with operacion;


 //----------------------------------------------------EXPRESIONES MATEMATICAS-------------------------------

operacion::=expresion:t 
  {:System.out.println(t);
    Arbol arbol = new Arbol(t);
    arbol.evaluar();:};

expresion::=expresion:i MAS t:e
    {:System.out.println(i+"+"+e);
    Suma s = new Suma();
    Nodo<Division> n= new Nodo(s);
    n.getNodosHijos().add(i);
    n.getNodosHijos().add(e);
    RESULT=n;:};

expresion::=expresion:i MENOS t:e
    {:System.out.println(i+"-"+e);
    Resta r = new Resta();
    Nodo<Resta> n= new Nodo(r);
    n.getNodosHijos().add(i);
    n.getNodosHijos().add(e);
    RESULT=n;:};

expresion::=t:i
    {:RESULT=i;:};


t::=t:i POR f:e
    {:System.out.println(i+"*"+e);
    Multiplicacion m = new Multiplicacion();
    Nodo<Multiplicacion> n= new Nodo(m);
    n.getNodosHijos().add(i);
    n.getNodosHijos().add(e);
    RESULT=n;:};

t::=t:i DIV f:e
    {:System.out.println(i+"/"+e);
    Division d = new Division();
    Nodo<Division> n= new Nodo(d);
    n.getNodosHijos().add(i);
    n.getNodosHijos().add(e);
    RESULT=n;:};

t::=f:i
    {:RESULT=new Nodo("int",i.getValor());;:};


//f::=IDENTIFICADOR:i//Se debe buscar el identificador, y si se encuenra RESULT=valor de lo contrario mostrar error
//    {:RESULT=i;:};

f::=NUMERO:i
    {:RESULT=new Nodo("int",i);:};

